@using BootstrapSupport
@model AuthenticationService.Models.RegisterModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/shared/_default.cshtml";
}

<h2>Create a New Account</h2>
<p>
    Use the form below to create a new account. 
</p>
<p>
    Passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.
</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true,null,new {@class="alert alert-error"})

    <fieldset class="form-horizontal">
        <legend>RegisterModel</legend>

        @Html.BeginControlGroupFor(model => model.UserName)
            @Html.LabelFor(model => model.UserName, new {@class="control-label"})
		<div class="controls">
            @Html.EditorFor(model => model.UserName, new{@class="input-large"})
            @Html.ValidationMessageFor(model => model.UserName, null, new {@class="help-inline"})

		</div>
		@Html.EndControlGroup()

        @Html.BeginControlGroupFor(model => model.Email)
            @Html.LabelFor(model => model.Email, new {@class="control-label"})
		<div class="controls">
            @Html.EditorFor(model => model.Email, new{@class="input-large"})
            @Html.ValidationMessageFor(model => model.Email, null, new {@class="help-inline"})

		</div>
		@Html.EndControlGroup()

        @Html.BeginControlGroupFor(model => model.Password)
            @Html.LabelFor(model => model.Password, new {@class="control-label"})
		<div class="controls">
            @Html.EditorFor(model => model.Password, new{@class="input-large"})
            @Html.ValidationMessageFor(model => model.Password, null, new {@class="help-inline"})

		</div>
		@Html.EndControlGroup()

        @Html.BeginControlGroupFor(model => model.ConfirmPassword)
            @Html.LabelFor(model => model.ConfirmPassword, new {@class="control-label"})
		<div class="controls">
            @Html.EditorFor(model => model.ConfirmPassword, new{@class="input-large"})
            @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new {@class="help-inline"})

		</div>
		@Html.EndControlGroup()

        @Html.BeginControlGroupFor(model => model.SecretQuestion)
            @Html.LabelFor(model => model.SecretQuestion, new {@class="control-label"})
		<div class="controls">
            @Html.EditorFor(model => model.SecretQuestion, new{@class="input-large"})
            @Html.ValidationMessageFor(model => model.SecretQuestion, null, new {@class="help-inline"})

		</div>
		@Html.EndControlGroup()

        @Html.BeginControlGroupFor(model => model.SecretAnswer)
            @Html.LabelFor(model => model.SecretAnswer, new {@class="control-label"})
		<div class="controls">
            @Html.EditorFor(model => model.SecretAnswer, new{@class="input-large"})
            @Html.ValidationMessageFor(model => model.SecretAnswer, null, new {@class="help-inline"})

		</div>
		@Html.EndControlGroup()

        <div class="form-actions">
            <input type="submit" class="btn btn-primary" value="Create" />
        </div>
    </fieldset>
}