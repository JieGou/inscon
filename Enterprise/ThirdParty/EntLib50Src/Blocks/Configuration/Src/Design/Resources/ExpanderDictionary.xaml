<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Microsoft.Practices.EnterpriseLibrary.Configuration.DesignTime;component/Resources/Brushes.xaml" />
        <ResourceDictionary Source="/Microsoft.Practices.EnterpriseLibrary.Configuration.DesignTime;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="DisabledUpDownArrowFill" Color="#FF676767" />

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Path
                x:Name="Close_Arrow"
                Width="12"
                Height="6"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Data="F1M11.258,1L21.65,19 0.866,19 11.258,1z"
                Fill="{TemplateBinding Foreground}"
                RenderTransformOrigin="0.5,0.5"
                Stretch="Fill"
                Visibility="Collapsed">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="135" />
                        <TranslateTransform />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <Path
                x:Name="Open_Arrow"
                Width="12"
                Height="6"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Data="F1M11.258,1L21.65,19 0.866,19 11.258,1z"
                Fill="{TemplateBinding Foreground}"
                RenderTransformOrigin="0.5,0.5"
                Stretch="Fill"
                Visibility="Visible">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="90" />
                        <TranslateTransform X="0" Y="0" />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="Close_Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.3" ScaleY="1.3" />
                            <SkewTransform />
                            <RotateTransform Angle="-45" />
                            <TranslateTransform />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Open_Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.3" ScaleY="1.3" />
                            <SkewTransform />
                            <RotateTransform Angle="90" />
                            <TranslateTransform />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Open_Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.3" ScaleY="1.3" />
                            <SkewTransform />
                            <RotateTransform Angle="90" />
                            <TranslateTransform />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Close_Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.3" ScaleY="1.3" />
                            <SkewTransform />
                            <RotateTransform Angle="135" />
                            <TranslateTransform />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="true" />
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Close_Arrow" Property="Visibility" Value="Visible" />
                <Setter TargetName="Open_Arrow" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Close_Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform Angle="135" />
                            <TranslateTransform />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Open_Arrow" Property="Fill" Value="Gray" />
                <Setter TargetName="Close_Arrow" Property="Fill" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SectionExpander" TargetType="{x:Type Expander}">

        <Setter Property="AutomationProperties.AutomationId" Value="{Binding Name}" />
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid Margin="0,0,0,10" d:DesignWidth="191.25">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="PropertyGridRow" Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            HorizontalAlignment="Left"
                            Background="#FFBDBDBD"
                            BorderBrush="{DynamicResource LightGreyBorderBrush}"
                            BorderThickness="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition MinWidth="160" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton
                                    x:Name="expanderToggle"
                                    Background="{DynamicResource NormalBrush}"
                                    Focusable="False"
                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True"
                                    Template="{DynamicResource ExpanderToggleButton}"
                                    Visibility="{Binding Bindable, Mode=OneWay, Converter={StaticResource NullToHiddenConverter}}" />
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True" />
                                <StackPanel
                                    Grid.Column="2"
                                    Focusable="False"
                                    Orientation="Horizontal">
                                    <ToggleButton
                                        x:Name="ShowProperties"
                                        Margin="1,0,1,0"
                                        VerticalAlignment="Center"
                                        Background="{DynamicResource NormalBrush}"
                                        Content="Properties"
                                        Focusable="False"
                                        IsChecked="{Binding PropertiesShown, Mode=TwoWay}"
                                        Template="{DynamicResource PropertiesExpandToggleButton}"
                                        Visibility="{Binding Properties, Converter={StaticResource PropertiesToVisibilityConverter}, FallbackValue=Hidden}" />
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border
                            Grid.RowSpan="3"
                            Margin="0,20,0,0"
                            HorizontalAlignment="Stretch"
                            BorderBrush="{DynamicResource LightGreyBorderBrush}"
                            BorderThickness="1"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToHiddenConverter}, ElementName=expanderToggle}" />

                        <Border
                            Grid.Row="1"
                            MaxWidth="600"
                            Padding="5"
                            HorizontalAlignment="Left"
                            Background="{StaticResource PopupBackground}"
                            BorderBrush="{StaticResource LightGreyBorderBrush}"
                            BorderThickness="1"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ShowProperties}">
                            <ItemsControl
                                Focusable="False"
                                Grid.IsSharedSizeScope="True"
                                ItemsSource="{Binding Properties}">
                                <ItemsControl.Template>
                                    <ControlTemplate>
                                        <Grid
                                            HorizontalAlignment="Stretch"
                                            Controls:GridSplitterKeyAccelerator.DecrementKeyGesture="Alt+Left"
                                            Controls:GridSplitterKeyAccelerator.IncrementKeyGesture="Alt+Right"
                                            Controls:GridSplitterKeyAccelerator.TargetColumn="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="12" />
                                                <ColumnDefinition Width="75" SharedSizeGroup="PropLabel" />
                                                <ColumnDefinition Width="175*" />
                                            </Grid.ColumnDefinitions>

                                            <GridSplitter
                                                Grid.Column="1"
                                                Width="2"
                                                HorizontalAlignment="Right"
                                                Focusable="False"
                                                ResizeDirection="Columns"
                                                ShowsPreview="False" />

                                            <VirtualizingStackPanel Grid.ColumnSpan="3" IsItemsHost="True" />

                                        </Grid>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                            </ItemsControl>
                        </Border>

                        <Border
                            x:Name="ExpandSite"
                            Grid.Row="2"
                            Padding="5"
                            Background="{DynamicResource WindowBackgroundBrush}"
                            BorderBrush="{DynamicResource SolidBorderBrush}"
                            BorderThickness="1,0,1,1"
                            CornerRadius="0,0,2,2"
                            Visibility="Collapsed">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoBoxFocusVisualStyle" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PropertiesExpandToggleButton" TargetType="{x:Type ToggleButton}">
        <ContentControl
            x:Name="propertiesButtonVisual"
            Background="{DynamicResource ElementCommandBackgroundBrush}"
            Focusable="False"
            Foreground="{DynamicResource ElementCommandNormalBrush}">
            <Canvas
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                x:Name="chevronVisual"
                Width="17"
                Height="17">
                <Canvas.RenderTransform>
                    <RotateTransform Angle="180" CenterX="8.5" CenterY="8.5" />
                </Canvas.RenderTransform>
                <Path
                    Canvas.Left="-0.5"
                    Canvas.Top="-0.499999"
                    Width="18"
                    Height="18"
                    Data="F1 M 3,9.53674e-007L 14,9.53674e-007C 15.6569,9.53674e-007 17,1.34315 17,3L 17,14C 17,15.6569 15.6569,17 14,17L 3,17C 1.34315,17 -1.63975e-007,15.6569 -1.63975e-007,14L -1.63975e-007,3C -1.63975e-007,1.34315 1.34315,9.53674e-007 3,9.53674e-007 Z "
                    Fill="{Binding Background, ElementName=propertiesButtonVisual}"
                    Stretch="Fill"
                    Stroke="#00949494"
                    StrokeLineJoin="Round" />
                <Path
                    Canvas.Left="-0.5"
                    Canvas.Top="-0.499999"
                    Width="18"
                    Height="18"
                    Data="F1 M 3,9.53674e-007L 14,9.53674e-007C 15.6569,9.53674e-007 17,1.34315 17,3L 17,14C 17,15.6569 15.6569,17 14,17L 3,17C 1.34315,17 -1.63975e-007,15.6569 -1.63975e-007,14L -1.63975e-007,3C -1.63975e-007,1.34315 1.34315,9.53674e-007 3,9.53674e-007 Z "
                    Stretch="Fill"
                    Stroke="{DynamicResource ElementCommandNormalBrush}"
                    StrokeLineJoin="Round" />

                <Viewbox
                    Canvas.Left="2.82593"
                    Canvas.Top="1.76501"
                    Width="11.3482"
                    Height="13.47">
                    <Canvas Width="11.3482" Height="13.47">
                        <Viewbox
                            Canvas.Left="0"
                            Canvas.Top="0"
                            Width="11.3482"
                            Height="13.47">
                            <Canvas Width="11.3482" Height="13.47">
                                <Path
                                    Canvas.Left="-7.15256e-007"
                                    Canvas.Top="0"
                                    Width="11.3482"
                                    Height="7.17429"
                                    Data="F1 M 9.84817,5.67429L 5.67408,1.5L 1.5,5.64842"
                                    Stretch="Fill"
                                    Stroke="{DynamicResource ElementCommandShadowBrush}"
                                    StrokeEndLineCap="Round"
                                    StrokeLineJoin="Round"
                                    StrokeStartLineCap="Round"
                                    StrokeThickness="3" />
                                <Path
                                    Canvas.Left="7.15256e-007"
                                    Canvas.Top="6.29569"
                                    Width="11.3482"
                                    Height="7.17429"
                                    Data="F1 M 9.84817,11.97L 5.67408,7.79569L 1.5,11.9441"
                                    Stretch="Fill"
                                    Stroke="{DynamicResource ElementCommandShadowBrush}"
                                    StrokeEndLineCap="Round"
                                    StrokeLineJoin="Round"
                                    StrokeStartLineCap="Round"
                                    StrokeThickness="3" />
                            </Canvas>
                        </Viewbox>
                        <Viewbox
                            Canvas.Left="0.499999"
                            Canvas.Top="0.5"
                            Width="10.3482"
                            Height="12.47">
                            <Canvas Width="10.3482" Height="12.47">
                                <Path
                                    Canvas.Left="-9.53674e-007"
                                    Canvas.Top="0"
                                    Width="10.3482"
                                    Height="6.17429"
                                    Data="F1 M 9.34817,5.17429L 5.17408,1L 0.999999,5.14842"
                                    Stretch="Fill"
                                    Stroke="{Binding Foreground, ElementName=propertiesButtonVisual}"
                                    StrokeEndLineCap="Round"
                                    StrokeLineJoin="Round"
                                    StrokeStartLineCap="Round"
                                    StrokeThickness="2" />
                                <Path
                                    Canvas.Left="4.29153e-006"
                                    Canvas.Top="6.29569"
                                    Width="10.3482"
                                    Height="6.17429"
                                    Data="F1 M 9.34818,11.47L 5.17409,7.29569L 1,11.4441"
                                    Stretch="Fill"
                                    Stroke="{Binding Foreground, ElementName=propertiesButtonVisual}"
                                    StrokeEndLineCap="Round"
                                    StrokeLineJoin="Round"
                                    StrokeStartLineCap="Round"
                                    StrokeThickness="2" />
                            </Canvas>
                        </Viewbox>
                    </Canvas>
                </Viewbox>
            </Canvas>
        </ContentControl>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="propertiesButtonVisual" Property="Foreground" Value="{DynamicResource ElementCommandMouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="propertiesButtonVisual" Property="Foreground" Value="{DynamicResource ElementCommandMouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="chevronVisual" Property="RenderTransform" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="chevronVisual" Property="RenderTransform" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False" />
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stroke="DarkGray" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="#666"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stroke="DarkGray" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="#666"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stroke="DarkGray" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="#666"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            SnapsToDevicePixels="true"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Ellipse
                                x:Name="circle"
                                Grid.Column="1"
                                Width="19"
                                Height="19"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stroke="DarkGray" />
                            <Path
                                x:Name="arrow"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                SnapsToDevicePixels="false"
                                Stroke="#666"
                                StrokeThickness="2" />
                            <ContentPresenter
                                Grid.Column="0"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DropDownEditorExpander" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Margin="1"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <ContentPresenter
                                x:Name="ExpandSite"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>