//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Enterprise.DataServices.DALSvc.Test.AddrLoc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressLocation", Namespace="http://schemas.datacontract.org/2004/07/Enterprise.DAL.Core.Model")]
    [System.SerializableAttribute()]
    public partial class AddressLocation : Enterprise.DataServices.DALSvc.Test.AddrLoc.ModelBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeoCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LattitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingNumber {
            get {
                return this.BuildingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingNumberField, value) != true)) {
                    this.BuildingNumberField = value;
                    this.RaisePropertyChanged("BuildingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeoCode {
            get {
                return this.GeoCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeoCodeField, value) != true)) {
                    this.GeoCodeField = value;
                    this.RaisePropertyChanged("GeoCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Lattitude {
            get {
                return this.LattitudeField;
            }
            set {
                if ((this.LattitudeField.Equals(value) != true)) {
                    this.LattitudeField = value;
                    this.RaisePropertyChanged("Lattitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelBase", Namespace="http://schemas.datacontract.org/2004/07/Enterprise.DAL.Core.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation))]
    public partial class ModelBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short EntityNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SqlDatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackChangesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short EntityNumber {
            get {
                return this.EntityNumberField;
            }
            set {
                if ((this.EntityNumberField.Equals(value) != true)) {
                    this.EntityNumberField = value;
                    this.RaisePropertyChanged("EntityNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SqlDatabase {
            get {
                return this.SqlDatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlDatabaseField, value) != true)) {
                    this.SqlDatabaseField = value;
                    this.RaisePropertyChanged("SqlDatabase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackChanges {
            get {
                return this.TrackChangesField;
            }
            set {
                if ((this.TrackChangesField.Equals(value) != true)) {
                    this.TrackChangesField = value;
                    this.RaisePropertyChanged("TrackChanges");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AddrLoc.IAddressLocationService")]
    public interface IAddressLocationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressLocationService/GetAllAddressesLocationRecords", ReplyAction="http://tempuri.org/IAddressLocationService/GetAllAddressesLocationRecordsResponse" +
            "")]
        Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation[] GetAllAddressesLocationRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressLocationService/GetAllAddressesLocationRecords", ReplyAction="http://tempuri.org/IAddressLocationService/GetAllAddressesLocationRecordsResponse" +
            "")]
        System.Threading.Tasks.Task<Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation[]> GetAllAddressesLocationRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressLocationService/GetAddressLocationById", ReplyAction="http://tempuri.org/IAddressLocationService/GetAddressLocationByIdResponse")]
        Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation GetAddressLocationById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressLocationService/GetAddressLocationById", ReplyAction="http://tempuri.org/IAddressLocationService/GetAddressLocationByIdResponse")]
        System.Threading.Tasks.Task<Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation> GetAddressLocationByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressLocationService/DeleteRecord", ReplyAction="http://tempuri.org/IAddressLocationService/DeleteRecordResponse")]
        void DeleteRecord(Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation addressLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressLocationService/DeleteRecord", ReplyAction="http://tempuri.org/IAddressLocationService/DeleteRecordResponse")]
        System.Threading.Tasks.Task DeleteRecordAsync(Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation addressLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressLocationService/SaveRecord", ReplyAction="http://tempuri.org/IAddressLocationService/SaveRecordResponse")]
        int SaveRecord(Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation addressLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressLocationService/SaveRecord", ReplyAction="http://tempuri.org/IAddressLocationService/SaveRecordResponse")]
        System.Threading.Tasks.Task<int> SaveRecordAsync(Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation addressLocation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddressLocationServiceChannel : Enterprise.DataServices.DALSvc.Test.AddrLoc.IAddressLocationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddressLocationServiceClient : System.ServiceModel.ClientBase<Enterprise.DataServices.DALSvc.Test.AddrLoc.IAddressLocationService>, Enterprise.DataServices.DALSvc.Test.AddrLoc.IAddressLocationService {
        
        public AddressLocationServiceClient() {
        }
        
        public AddressLocationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddressLocationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressLocationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressLocationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation[] GetAllAddressesLocationRecords() {
            return base.Channel.GetAllAddressesLocationRecords();
        }
        
        public System.Threading.Tasks.Task<Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation[]> GetAllAddressesLocationRecordsAsync() {
            return base.Channel.GetAllAddressesLocationRecordsAsync();
        }
        
        public Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation GetAddressLocationById(int id) {
            return base.Channel.GetAddressLocationById(id);
        }
        
        public System.Threading.Tasks.Task<Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation> GetAddressLocationByIdAsync(int id) {
            return base.Channel.GetAddressLocationByIdAsync(id);
        }
        
        public void DeleteRecord(Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation addressLocation) {
            base.Channel.DeleteRecord(addressLocation);
        }
        
        public System.Threading.Tasks.Task DeleteRecordAsync(Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation addressLocation) {
            return base.Channel.DeleteRecordAsync(addressLocation);
        }
        
        public int SaveRecord(Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation addressLocation) {
            return base.Channel.SaveRecord(addressLocation);
        }
        
        public System.Threading.Tasks.Task<int> SaveRecordAsync(Enterprise.DataServices.DALSvc.Test.AddrLoc.AddressLocation addressLocation) {
            return base.Channel.SaveRecordAsync(addressLocation);
        }
    }
}
